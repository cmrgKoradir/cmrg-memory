{"version":3,"sources":["Store.js","components/memory/Card.js","components/memory/ImageCard.js","components/memory/TextCard.js","components/memory/Memory.js","App.js","components/pages/About.js","components/layout/Header.js","index.js"],"names":["CardInfoContext","React","createContext","CardSelectionContext","Store","children","useState","cardInfo","setCardInfo","cardSelection","setCardSelection","Provider","value","flipCard","uniqueCardSelector","currentSelection","setSelection","length","card","document","querySelector","classList","contains","add","Card","id","pairId","useContext","className","pairid","onClick","ImageCard","info","crossOrigin","src","image","alt","memoryTextStyle","display","flexDirection","justifyContent","alignItems","padding","nameStyle","fontWeight","nickNameStyle","positionStyle","TextCard","style","name","nickName","position","restartGame","gameSize","setAvailableCards","setTimeout","createCards","shuffle","slice","flatMap","imageCardId","textCardId","Array","of","key","iterable","arr","from","n","keys","i","j","Math","floor","random","tmp","checkSelection","Error","pairIdA","parseInt","getAttribute","console","log","pairIdB","forEach","remove","memoryStyle","width","height","gridTemplateColumns","gridAutoRows","gridGap","justifyItems","Memory","useEffect","setGameSize","availableCards","type","min","max","defaultValue","onChange","e","target","App","fetch","then","response","text","htmlString","portraits","DOMParser","parseFromString","querySelectorAll","map","portrait","innerText","replace","window","location","host","img","createElement","body","appendChild","removeChild","index","fetchData","containerStyle","About","href","headerStyle","background","color","headerLinkStyle","Header","to","ReactDOM","render","Helmet","content","StrictMode","basename","process","path","component","exact","getElementById"],"mappings":"sSAEaA,G,MAAkBC,IAAMC,cAAc,KACtCC,EAAuBF,IAAMC,cAAc,IAezCE,EAbD,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACMC,mBAAS,IADf,mBACnBC,EADmB,KACTC,EADS,OAEgBF,mBAAS,IAFzB,mBAEnBG,EAFmB,KAEJC,EAFI,KAI1B,OACI,kBAACV,EAAgBW,SAAjB,CAA0BC,MAAO,CAACL,EAAUC,IACxC,kBAACL,EAAqBQ,SAAtB,CAA+BC,MAAO,CAACH,EAAeC,IACjDL,K,wBCIXQ,G,MAAW,SAACC,EAAoBC,EAAkBC,GACpD,KAAGD,EAAiBE,QAAU,GAA9B,CAEA,IAAMC,EAAOC,SAASC,cAAcN,GACjCI,EAAKG,UAAUC,SAAS,aAE3BJ,EAAKG,UAAUE,IAAI,WACnBP,EAAa,GAAD,mBAAKD,GAAL,CAAuBG,SAGxBM,EAtBF,SAAC,GAA4B,IAA3BnB,EAA0B,EAA1BA,SAAUoB,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,OAAY,EACKC,qBAAWxB,GADhB,mBAC9BM,EAD8B,KACfC,EADe,KAErC,OACI,yBAAKkB,UAAS,eAAUH,GAAMI,OAAQH,EAAQI,QAAS,kBAAMjB,EAAS,IAAD,OAAKY,GAAMhB,EAAeC,KAA/F,IACI,yBAAKkB,UAAU,WACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,QAAQvB,MCCxB0B,EARG,SAAC,GAAwB,IAAvBN,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,OAAQM,EAAU,EAAVA,KAC5B,OACI,kBAAC,EAAD,CAAMP,GAAIA,EAAIC,OAAQA,GAClB,yBAAKO,YAAY,YAAYC,IAAKF,EAAKG,MAAOC,IAAI,OCQxDC,EAAkB,CACpBC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,eACZC,QAAS,QAGPC,EAAY,CACdC,WAAY,QAGVC,EAAgB,GAGhBC,EAAgB,GAGPC,EA7BE,SAAC,GAAwB,IAAvBtB,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,OAAQM,EAAU,EAAVA,KAC3B,OACI,kBAAC,EAAD,CAAMP,GAAIA,EAAIC,OAAQA,GAClB,yBAAKsB,MAAOX,GACR,0BAAMW,MAAOL,GAAYX,EAAKiB,MAC7BjB,EAAKkB,UAAY,0BAAMF,MAAOH,GAAb,IAA8Bb,EAAKkB,SAAnC,KAClB,0BAAMF,MAAOF,GAAgBd,EAAKmB,aC6B5CC,EAAc,SAAC7C,EAAU8C,EAAUC,GACrCA,EAAkB,IAClBC,YAAW,kBAAMD,EAAkBE,EAAYjD,EAAU8C,MAAY,IAGnEG,EAAc,SAACjD,EAAU8C,GAAX,OAAwBI,EACxCA,EAAQlD,GAAUmD,MAAM,EAAGL,GAC1BM,SAAQ,SAAC3B,GACN,IAAMP,EAAKO,EAAKP,GACVmC,EAAW,cAAUnC,EAAV,UACXoC,EAAU,cAAUpC,EAAV,SAChB,OAAQqC,MAAMC,GAEV,kBAAC,EAAD,CAAWC,IAAKJ,EAAanC,GAAImC,EAAalC,OAAQD,EAAIO,KAAMA,IAChE,kBAAC,EAAD,CAAUgC,IAAKH,EAAYpC,GAAIoC,EAAYnC,OAAQD,EAAIO,KAAMA,UAKnEyB,EAAU,SAACQ,GACb,IAD0B,EACpBC,EAAMJ,MAAMK,KAAKF,GAEjBG,EAAIF,EAAIjD,OAAS,EAHG,cAIXiD,EAAIG,QAJO,IAI1B,IAAI,EAAJ,qBAA0B,CAAC,IAAjBC,EAAgB,QAEhBC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYN,EAAIE,EAAI,GAAKA,GAC7CK,EAAMT,EAAII,GAChBJ,EAAII,GAAKJ,EAAIK,GACbL,EAAIK,GAAKI,GATa,8BAW1B,OAAOT,GAGLU,EAAiB,SAAC7D,EAAkBL,GAAsB,IAAD,IAC3D,KAAGK,EAAiBE,OAAS,GAA7B,CACA,GAAGF,EAAiBE,OAAS,EAAG,MAAM4D,MAAM,yDAE5C,IAAMC,EAAO,UAAGC,SAAShE,EAAiB,GAAGiE,aAAa,kBAA7C,QAA2D,KACxE,GAAc,MAAXF,EAEC,MADAG,QAAQC,IAAInE,GACN8D,MAAM,YAAD,OAAa9D,EAAiB,GAA9B,kCAGf,IAAMoE,EAAO,UAAGJ,SAAShE,EAAiB,GAAGiE,aAAa,kBAA7C,QAA2D,KACxE,GAAc,MAAXG,EAEC,MADAF,QAAQC,IAAInE,GACN8D,MAAM,YAAD,OAAa9D,EAAiB,GAA9B,kCAIZ+D,IAAYK,EACX5B,YAAW,WACP7C,EAAiB,IACjBK,EAAiBqE,SAAQ,SAAAlE,GAAI,OAAIA,EAAKG,UAAUE,IAAI,eACtD,MAGFgC,YAAW,WACPxC,EAAiBqE,SAAQ,SAAAlE,GAAI,OAAIA,EAAKG,UAAUgE,OAAO,cACvD3E,EAAiB,MAClB,QAIL4E,EAAc,CAChBC,MAAO,OACPC,OAAQ,OAERlD,QAAS,OACTmD,oBAAqB,qCACrBC,aAAc,MACdC,QAAS,SACTjD,QAAS,SACTkD,aAAc,UAGHC,EA3GA,WAAO,IAAD,EACElE,qBAAW3B,GAAvBO,EADU,sBAEyBoB,qBAAWxB,GAFpC,mBAEVM,EAFU,KAEKC,EAFL,KAGjBoF,qBAAU,WACNlB,EAAenE,EAAeC,KAChC,CAACD,EAAeC,IALD,MAOeJ,mBAAS,GAPxB,mBAOV+C,EAPU,KAOA0C,EAPA,OAQ2BzF,mBAASkD,EAAYjD,IARhD,mBAQVyF,EARU,KAQM1C,EARN,KAgBjB,OAPAwC,qBAAU,WACNxC,EAAkB,IAClBC,YAAW,WACPD,EAAkBE,EAAYjD,EAAU8C,MACzC,KACL,CAAC9C,EAAU8C,EAAUC,IAGnB,oCACI,yBAAK1B,UAAU,YACVoE,EAAe/E,OAAS,GAAK,4BAAQW,UAAU,gBAAgBE,QAAS,kBAAMsB,EAAY7C,EAAU8C,EAAUC,KAAjF,WAC9B,2BAAO1B,UAAU,iBAAiBqE,KAAK,QAAQC,IAAI,IAAIC,IAAK5F,EAASU,OAAQmF,aAAc/C,EAAUgD,SAAU,SAACC,GAAD,OAAOP,EAAYO,EAAEC,OAAO3F,UAC3I,0BAAMgB,UAAU,mBAAhB,WAA2CyB,IAE/C,yBAAKzB,UAAU,SAASoB,MAAOsC,GAC1BU,EAAe/E,OAAS,GAAK,wBAAIW,UAAU,iBAAd,oBAC7BoE,KCiBFQ,MA5CH,WAAO,IAAD,EACQ7E,qBAAW3B,GAA1BQ,EADO,oBAKhB,OAFAsF,qBAAU,kBAUZ,SAAmBtF,GAEjBiG,MAAM,4DACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IACMC,GADM,IAAIC,WAAYC,gBAAgBH,EAAY,aAClCI,iBAAiB,aAQvC,OAPiBnD,MAAMK,KAAK2C,GACzBI,KAAI,SAAAC,GAAQ,YAAK,CAChBlE,KAAMkE,EAAS/F,cAAc,iBAAiBgG,UAC9ClE,SAAQ,UAAEiE,EAAS/F,cAAc,mBAAzB,aAAE,EAAoCgG,UAC9CjE,SAAUgE,EAAS/F,cAAc,SAASgG,UAC1CjF,MAAOgF,EAAS/F,cAAc,oBAAoBc,IAAImF,QAAQC,OAAOC,SAASC,KAAK,sDAIxFd,MAAK,SAAAnG,GASJ,OARAA,EAAS6E,SAAQ,SAAApD,GACf,IAAMyF,EAAMtG,SAASuG,cAAc,OACnCD,EAAIxF,YAAc,YAClBwF,EAAIvF,IAAMF,EAAKG,MACfsF,EAAIzE,MAAMuC,MAAQ,MAClBpE,SAASwG,KAAKC,YAAYH,GAC1BlE,YAAW,kBAAMpC,SAASwG,KAAKE,YAAYJ,KAAK,MAE3ClH,KAERmG,MAAK,SAAAnG,GAAQ,OAAIA,EAAS2G,KAAI,SAAClF,EAAM8F,GAAP,oBAAmBrG,GAAIqG,GAAU9F,SAC/D0E,MAAK,SAAAnG,GAAQ,OAAIC,EAAYD,MAtChBwH,CAAUvH,KAAc,CAACA,IAGvC,oCACE,yBAAKoB,UAAU,OACb,kBAAC,EAAD,SCAFoG,EAAiB,CACnBtF,QAAS,OAGEuF,EAfD,kBACV,oCACI,yBAAKjF,MAAOgF,GACR,qCACA,iIACA,4CAAiB,uBAAGE,KAAK,gCAAR,yBAAjB,2FCGNC,EAAc,CAChB7F,QAAS,OACTC,cAAe,SAEfE,WAAY,SAEZC,QAAS,QAET0F,WAAY,OACZC,MAAO,SAGLC,EAAkB,CACpBD,MAAO,SAGIE,EAvBA,kBACX,4BAAQvF,MAAOmF,GACX,2CACA,6BAAK,kBAAC,IAAD,CAAMK,GAAG,IAAIxF,MAAOsF,GAApB,QAAL,MAAwD,kBAAC,IAAD,CAAME,GAAG,SAASxF,MAAOsF,GAAzB,YCIhEG,IAASC,OACP,oCACE,kBAACC,EAAA,EAAD,KACE,0BAAM1F,KAAK,WAAW2F,QAAQ,yCAEhC,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAQC,SAAYC,gBAClB,kBAAC,IAAD,CAAOC,KAAO,IAAIC,UAAWV,IAC7B,kBAAC,IAAD,CAAOW,OAAK,EAACF,KAAK,IAAIC,UAAYzC,IAClC,kBAAC,IAAD,CAAOwC,KAAK,SAASC,UAAahB,QAK1C9G,SAASgI,eAAe,W","file":"static/js/main.09b6f206.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nexport const CardInfoContext = React.createContext([])\nexport const CardSelectionContext = React.createContext([])\n\nconst Store = ({children}) => {\n    const [cardInfo, setCardInfo] = useState([])\n    const [cardSelection, setCardSelection] = useState([])\n\n    return (\n        <CardInfoContext.Provider value={[cardInfo, setCardInfo]}>\n            <CardSelectionContext.Provider value={[cardSelection, setCardSelection]}>\n                {children}\n            </CardSelectionContext.Provider>\n        </CardInfoContext.Provider>\n    )\n}\n\nexport default Store","import React, { useContext } from 'react'\nimport './Card.css'\nimport { CardSelectionContext } from '../../Store'\n\nconst Card = ({children, id, pairId}) => {\n    const [cardSelection, setCardSelection] = useContext(CardSelectionContext)\n    return (\n        <div className={`card ${id}`} pairid={pairId} onClick={() => flipCard(`.${id}`, cardSelection, setCardSelection)}> {/* Note: setting `id=`, here would actually move the id to react `props` */}\n            <div className=\"content\">\n                <div className=\"front\"></div>\n                <div className=\"back\">{children}</div>\n            </div>\n        </div>\n    )\n}\n\nconst flipCard = (uniqueCardSelector, currentSelection, setSelection) => {\n    if(currentSelection.length >= 2) return\n\n    const card = document.querySelector(uniqueCardSelector)\n    if(card.classList.contains(\"flipped\")) return\n\n    card.classList.add(\"flipped\")\n    setSelection([...currentSelection, card])\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card'\n\nconst ImageCard = ({id, pairId, info}) => {\n    return (\n        <Card id={id} pairId={pairId}>\n            <img crossOrigin=\"anonymous\" src={info.image} alt=\"\" />\n        </Card>\n    )\n}\n\nexport default ImageCard","import React from 'react'\nimport Card from './Card'\n\nconst TextCard = ({id, pairId, info}) => {\n    return (\n        <Card id={id} pairId={pairId}>\n            <div style={memoryTextStyle}>\n                <span style={nameStyle}>{info.name}</span>\n                {info.nickName && <span style={nickNameStyle}>\"{info.nickName}\"</span>}\n                <span style={positionStyle}>{info.position}</span>\n            </div>\n        </Card>\n)}\n\nconst memoryTextStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'space-evenly',\n    padding: '.1em'\n}\n\nconst nameStyle = {\n    fontWeight: 'bold'\n}\n\nconst nickNameStyle = {\n}\n\nconst positionStyle = {\n}\n\nexport default TextCard","import React, { useState, useContext, useEffect } from 'react'\nimport { CardInfoContext, CardSelectionContext } from './../../Store'\n\nimport './Controls.css'\nimport ImageCard from './ImageCard'\nimport TextCard from './TextCard'\n\nconst Memory = () => {\n    const [cardInfo] = useContext(CardInfoContext)\n    const [cardSelection, setCardSelection] = useContext(CardSelectionContext)\n    useEffect(() => {\n        checkSelection(cardSelection, setCardSelection)\n    },[cardSelection, setCardSelection])\n\n    const [gameSize, setGameSize] = useState(2)\n    const [availableCards, setAvailableCards] = useState(createCards(cardInfo))\n    useEffect(() => {\n        setAvailableCards([])\n        setTimeout(() => {\n            setAvailableCards(createCards(cardInfo, gameSize))\n        }, 0);\n    },[cardInfo, gameSize, setAvailableCards])\n\n    return (\n        <>\n            <div className=\"controls\">\n                {availableCards.length > 1 && <button className=\"restartButton\" onClick={() => restartGame(cardInfo, gameSize, setAvailableCards)}>Restart</button>}\n                <input className=\"gameSizeSlider\" type=\"range\" min=\"2\" max={cardInfo.length} defaultValue={gameSize} onChange={(e) => setGameSize(e.target.value)}/>\n                <span className=\"gameSizeDisplay\">People: {gameSize}</span>\n            </div>\n            <div className=\"memory\" style={memoryStyle}>\n                {availableCards.length < 1 && <h1 className=\"loadingNotice\">Fetching data...</h1>}\n                {availableCards}\n            </div>\n        </>\n    )\n}\n\nconst restartGame = (cardInfo, gameSize, setAvailableCards) => {\n    setAvailableCards([])\n    setTimeout(() => setAvailableCards(createCards(cardInfo, gameSize)), 0)\n}\n\nconst createCards = (cardInfo, gameSize) => shuffle( // shuffle all created cards\n    shuffle(cardInfo).slice(0, gameSize) //select `gameSize` random people\n    .flatMap((info) => { //create an Image and a Text card for each\n        const id = info.id\n        const imageCardId = `card${id}_image`\n        const textCardId = `card${id}_text`\n        return (Array.of(\n            //note: `key` is not a `prop` so we have to pass the ID down as a seperatre property\n            <ImageCard key={imageCardId} id={imageCardId} pairId={id} info={info} />,\n            <TextCard key={textCardId} id={textCardId} pairId={id} info={info} />\n        ))\n    })\n)\n\nconst shuffle = (iterable) => {\n    const arr = Array.from(iterable)\n    \n    const n = arr.length - 1\n    for(const i of arr.keys()){\n        //fisher-yates: j random s.t. i <= j <= n\n        const j = Math.floor(Math.random() * (n - i + 1) + i)\n        const tmp = arr[i]\n        arr[i] = arr[j]\n        arr[j] = tmp\n    }\n    return arr\n}\n\nconst checkSelection = (currentSelection, setCardSelection) => {\n    if(currentSelection.length < 2) return\n    if(currentSelection.length > 2) throw Error(\"Illegal State: More than two cards selected at a time\")\n\n    const pairIdA = parseInt(currentSelection[0].getAttribute('pairid')) ?? null\n    if(pairIdA == null) {\n        console.log(currentSelection)\n        throw Error(`Expected ${currentSelection[0]} to have pairId but does not.`)\n    }\n\n    const pairIdB = parseInt(currentSelection[1].getAttribute('pairid')) ?? null\n    if(pairIdB == null){\n        console.log(currentSelection)\n        throw Error(`Expected ${currentSelection[1]} to have pairId but does not.`)\n    } \n\n    //the timeouts are necessary to allow the cards to fully flip and display for a while before the action happens\n    if(pairIdA === pairIdB){\n        setTimeout(() => {\n            setCardSelection([])\n            currentSelection.forEach(card => card.classList.add(\"hidden\"))\n        },1200)\n\n    }else {\n        setTimeout(() => {\n            currentSelection.forEach(card => card.classList.remove(\"flipped\"))\n            setCardSelection([])\n        }, 1200)\n    }\n}\n\nconst memoryStyle = {\n    width: '100%',\n    height: '100%',\n\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(8em, 1fr))',\n    gridAutoRows: '1fr',\n    gridGap: '.25rem',\n    padding: '.25rem',\n    justifyItems: 'center'\n}\n\nexport default Memory","import React, { useContext, useEffect } from 'react'\nimport './App.css'\nimport { CardInfoContext } from './Store'\nimport Memory from './components/memory/Memory'\n\nconst App = () => {\n  const [, setCardInfo] = useContext(CardInfoContext)\n\n  useEffect(() => fetchData(setCardInfo), [setCardInfo])\n  \n  return (\n    <>\n      <div className=\"app\">\n        <Memory />\n      </div>\n    </>\n)};\n\nfunction fetchData(setCardInfo){\n  //quick and dirty hack to get around CORS restrictions. Security issue because routing over third party!\n  fetch('https://cors-anywhere.herokuapp.com/www.comerge.net/team')\n    .then(response => response.text())\n    .then(htmlString => {\n      const dom = new DOMParser().parseFromString(htmlString, 'text/html')\n      const portraits = dom.querySelectorAll('.portrait')\n      const cardInfo = Array.from(portraits)\n        .map(portrait => ({\n          name: portrait.querySelector('.intro strong').innerText,\n          nickName: portrait.querySelector('.intro p')?.innerText,\n          position: portrait.querySelector('.role').innerText,\n          image: portrait.querySelector('.imageSlider img').src.replace(window.location.host,\"cors-anywhere.herokuapp.com/www.comerge.net\")\n        }))\n      return cardInfo\n    })\n    .then(cardInfo => { //fetch all images s.t. they get cached \n      cardInfo.forEach(info => {\n        const img = document.createElement('img')\n        img.crossOrigin = 'anonymous'\n        img.src = info.image\n        img.style.width = '1px'\n        document.body.appendChild(img)\n        setTimeout(() => document.body.removeChild(img),0)\n      })\n      return cardInfo\n    })\n    .then(cardInfo => cardInfo.map((info, index) => ({id: index, ...info, })))\n    .then(cardInfo => setCardInfo(cardInfo))\n}\n\nexport default App;\n","import React from 'react'\n\nconst About = () => (\n    <>\n        <div style={containerStyle}>\n            <h1>About</h1>\n            <p>This is a simple memory game meant as an exercise to get familiar with JavaScript, React and PWAs.</p>\n            <p>It will crawl <a href=\"https://www.comerge.net/team\">the Comerge Team Page</a> for updates when it's online\n            and use the profiles there to populate the cards with.</p>\n        </div>\n    </>\n);\n\nconst containerStyle = {\n    padding: '1em'\n}\n\nexport default About","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header = () => (\n    <header style={headerStyle}>\n        <h1>CMRG Memory</h1>\n        <div><Link to=\"/\" style={headerLinkStyle}>Home</Link> | <Link to=\"/about\" style={headerLinkStyle}>About</Link></div>\n    </header>\n)\n\nconst headerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n\n    alignItems: 'center',\n\n    padding: '.25em',\n\n    background: '#333',\n    color: 'white'\n}\n\nconst headerLinkStyle = {\n    color: 'white'\n}\n\nexport default Header","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport { Helmet } from 'react-helmet';\n\nimport App from './App';\nimport Store from './Store'\nimport About from './components/pages/About'\nimport Header from './components/layout/Header';\n\nReactDOM.render(\n  <>\n    <Helmet>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    </Helmet>\n    <React.StrictMode>\n      <Store>\n        <Router basename = {process.env.PUBLIC_URL}>\n          <Route path = \"/\" component={Header}/>\n          <Route exact path=\"/\" component= {App} />\n          <Route path=\"/about\" component = {About} />\n        </Router>\n      </Store>\n    </React.StrictMode>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}