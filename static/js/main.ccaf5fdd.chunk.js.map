{"version":3,"sources":["lib/fittext.js","Store.js","components/memory/Card.js","components/memory/ImageCard.js","components/memory/TextCard.js","components/memory/Memory.js","App.js","components/pages/About.js","components/layout/Header.js","index.js"],"names":["addEvent","el","type","fn","addEventListener","attachEvent","window","fitText","kompressor","options","settings","obj","ext","key","hasOwnProperty","extend","fit","compressor","resizer","style","fontSize","Math","max","min","clientWidth","parseFloat","maxFontSize","minFontSize","Array","isArray","i","length","CardInfoContext","React","createContext","CardSelectionContext","Store","children","useState","cardInfo","setCardInfo","cardSelection","setCardSelection","Provider","value","flipCard","uniqueCardSelector","currentSelection","setSelection","card","document","querySelector","classList","contains","add","Card","id","pairId","useContext","className","pairid","onClick","ImageCard","info","crossOrigin","src","image","alt","memoryTextStyle","display","flexDirection","justifyContent","alignItems","padding","nameStyle","fontWeight","nickNameStyle","positionStyle","TextCard","name","nickName","position","restartGame","gameSize","setAvailableCards","setTimeout","createCards","shuffle","slice","flatMap","imageCardId","textCardId","of","iterable","arr","from","n","keys","j","floor","random","tmp","checkSelection","Error","pairIdA","parseInt","getAttribute","console","log","pairIdB","forEach","remove","memoryStyle","width","height","gridTemplateColumns","gridAutoRows","gridGap","justifyItems","Memory","useEffect","setGameSize","availableCards","querySelectorAll","defaultValue","onChange","e","target","App","fetch","then","response","text","htmlString","portraits","DOMParser","parseFromString","map","portrait","innerText","replace","location","host","img","createElement","body","appendChild","removeChild","index","fetchData","containerStyle","About","href","headerStyle","background","color","headerLinkStyle","Header","to","ReactDOM","render","Helmet","content","StrictMode","basename","process","path","component","exact","getElementById"],"mappings":"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","file":"static/js/main.ccaf5fdd.chunk.js","sourcesContent":["/*!\t\n* FitText.js 1.0 jQuery free version\n*\n* Copyright 2011, Dave Rupert http://daverupert.com \n* Released under the WTFPL license \n* http://sam.zoy.org/wtfpl/\n* Modified by Slawomir Kolodziej http://slawekk.info\n*\n* Date: Tue Aug 09 2011 10:45:54 GMT+0200 (CEST)\n*/\n(function(){\n\n  var addEvent = function (el, type, fn) {\n    if (el.addEventListener)\n      el.addEventListener(type, fn, false);\n\t\telse\n\t\t\tel.attachEvent('on'+type, fn);\n  };\n  \n  var extend = function(obj,ext){\n    for(var key in ext)\n      if(ext.hasOwnProperty(key))\n        obj[key] = ext[key];\n    return obj;\n  };\n\n  window.fitText = function (el, kompressor, options) {\n\n    var settings = extend({\n      'minFontSize' : -1/0,\n      'maxFontSize' : 1/0\n    },options);\n\n    var fit = function (el) {\n      var compressor = kompressor || 1;\n\n      var resizer = function () {\n        if((el ?? null) === null) return;\n        el.style.fontSize = Math.max(Math.min(el.clientWidth / (compressor*10), parseFloat(settings.maxFontSize)), parseFloat(settings.minFontSize)) + 'px';\n      };\n\n      // Call once to set.\n      resizer();\n\n      // Bind events\n      // If you have any js library which support Events, replace this part\n      // and remove addEvent function (or use original jQuery version)\n      addEvent(window, 'resize', resizer);\n      addEvent(window, 'orientationchange', resizer);\n    };\n\n    var isArray = Array.isArray(el)\n    if (isArray)\n      for(var i=0; i<el.length; i++)\n        fit(el[i]);\n    else\n      fit(el);\n\n    // return set of elements\n    return el;\n  };\n})();","import React, {useState} from 'react';\n\nexport const CardInfoContext = React.createContext([])\nexport const CardSelectionContext = React.createContext([])\n\nconst Store = ({children}) => {\n    const [cardInfo, setCardInfo] = useState([])\n    const [cardSelection, setCardSelection] = useState([])\n\n    return (\n        <CardInfoContext.Provider value={[cardInfo, setCardInfo]}>\n            <CardSelectionContext.Provider value={[cardSelection, setCardSelection]}>\n                {children}\n            </CardSelectionContext.Provider>\n        </CardInfoContext.Provider>\n    )\n}\n\nexport default Store","import React, { useContext } from 'react'\nimport './Card.css'\nimport { CardSelectionContext } from '../../Store'\n\nconst Card = ({children, id, pairId}) => {\n    const [cardSelection, setCardSelection] = useContext(CardSelectionContext)\n    return (\n        <div className={`card ${id}`} pairid={pairId} onClick={() => flipCard(`.${id}`, cardSelection, setCardSelection)}> {/* Note: setting `id=`, here would actually move the id to react `props` */}\n            <div className=\"content\">\n                <div className=\"front\"></div>\n                <div className=\"back\">{children}</div>\n            </div>\n        </div>\n    )\n}\n\nconst flipCard = (uniqueCardSelector, currentSelection, setSelection) => {\n    if(currentSelection.length >= 2) return\n\n    const card = document.querySelector(uniqueCardSelector)\n    if(card.classList.contains(\"flipped\")) return\n\n    card.classList.add(\"flipped\")\n    setSelection([...currentSelection, card])\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card'\n\nconst ImageCard = ({id, pairId, info}) => {\n    return (\n        <Card id={id} pairId={pairId}>\n            <img crossOrigin=\"anonymous\" src={info.image} alt=\"\" />\n        </Card>\n    )\n}\n\nexport default ImageCard","import React from 'react'\nimport Card from './Card'\n\nconst TextCard = ({id, pairId, info}) => {\n    return (\n        <Card id={id} pairId={pairId}>\n            <div className=\"textCardContent\" style={memoryTextStyle}>\n                <span style={nameStyle}>{info.name}</span>\n                {info.nickName && <span style={nickNameStyle}>\"{info.nickName}\"</span>}\n                <span style={positionStyle}>{info.position}</span>\n            </div>\n        </Card>\n)}\n\nconst memoryTextStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'space-evenly',\n    padding: '.1em'\n}\n\nconst nameStyle = {\n    fontWeight: 'bold'\n}\n\nconst nickNameStyle = {\n}\n\nconst positionStyle = {\n}\n\nexport default TextCard","import React, { useState, useContext, useEffect } from 'react'\nimport {} from '../../lib/fittext'\nimport { CardInfoContext, CardSelectionContext } from './../../Store'\n\nimport './Controls.css'\nimport ImageCard from './ImageCard'\nimport TextCard from './TextCard'\n\nconst Memory = () => {\n    const [cardInfo] = useContext(CardInfoContext)\n    const [cardSelection, setCardSelection] = useContext(CardSelectionContext)\n    useEffect(() => {\n        checkSelection(cardSelection, setCardSelection)\n    },[cardSelection, setCardSelection])\n\n    const [gameSize, setGameSize] = useState(2)\n    const [availableCards, setAvailableCards] = useState(createCards(cardInfo))\n    useEffect(() => {\n        setAvailableCards([])\n        setTimeout(() => {\n            setAvailableCards(createCards(cardInfo, gameSize))\n            console.log(document.querySelectorAll('.textCardContent'))\n            setTimeout(() => window.fitText(Array.from(document.querySelectorAll('.textCardContent'))), 0);\n        }, 0);\n    },[cardInfo, gameSize, setAvailableCards])\n\n    return (\n        <>\n            <div className=\"controls\">\n                {availableCards.length > 1 && <button className=\"restartButton\" onClick={() => restartGame(cardInfo, gameSize, setAvailableCards)}>Restart</button>}\n                <input className=\"gameSizeSlider\" type=\"range\" min=\"2\" max={cardInfo.length} defaultValue={gameSize} onChange={(e) => setGameSize(e.target.value)}/>\n                <span className=\"gameSizeDisplay\">People: {gameSize}</span>\n            </div>\n            <div className=\"memory\" style={memoryStyle}>\n                {availableCards.length < 1 && <h1 className=\"loadingNotice\">Fetching data...</h1>}\n                {availableCards}\n            </div>\n        </>\n    )\n}\n\nconst restartGame = (cardInfo, gameSize, setAvailableCards) => {\n    setAvailableCards([])\n    setTimeout(() => setAvailableCards(createCards(cardInfo, gameSize)), 0)\n}\n\nconst createCards = (cardInfo, gameSize) => shuffle( // shuffle all created cards\n    shuffle(cardInfo).slice(0, gameSize) //select `gameSize` random people\n    .flatMap((info) => { //create an Image and a Text card for each\n        const id = info.id\n        const imageCardId = `card${id}_image`\n        const textCardId = `card${id}_text`\n        return (Array.of(\n            //note: `key` is not a `prop` so we have to pass the ID down as a seperatre property\n            <ImageCard key={imageCardId} id={imageCardId} pairId={id} info={info} />,\n            <TextCard key={textCardId} id={textCardId} pairId={id} info={info} />\n        ))\n    })\n)\n\nconst shuffle = (iterable) => {\n    const arr = Array.from(iterable)\n    \n    const n = arr.length - 1\n    for(const i of arr.keys()){\n        //fisher-yates: j random s.t. i <= j <= n\n        const j = Math.floor(Math.random() * (n - i + 1) + i)\n        const tmp = arr[i]\n        arr[i] = arr[j]\n        arr[j] = tmp\n    }\n    return arr\n}\n\nconst checkSelection = (currentSelection, setCardSelection) => {\n    if(currentSelection.length < 2) return\n    if(currentSelection.length > 2) throw Error(\"Illegal State: More than two cards selected at a time\")\n\n    const pairIdA = parseInt(currentSelection[0].getAttribute('pairid')) ?? null\n    if(pairIdA == null) {\n        console.log(currentSelection)\n        throw Error(`Expected ${currentSelection[0]} to have pairId but does not.`)\n    }\n\n    const pairIdB = parseInt(currentSelection[1].getAttribute('pairid')) ?? null\n    if(pairIdB == null){\n        console.log(currentSelection)\n        throw Error(`Expected ${currentSelection[1]} to have pairId but does not.`)\n    } \n\n    //the timeouts are necessary to allow the cards to fully flip and display for a while before the action happens\n    if(pairIdA === pairIdB){\n        setTimeout(() => {\n            setCardSelection([])\n            currentSelection.forEach(card => card.classList.add(\"hidden\"))\n        },1200)\n\n    }else {\n        setTimeout(() => {\n            currentSelection.forEach(card => card.classList.remove(\"flipped\"))\n            setCardSelection([])\n        }, 1200)\n    }\n}\n\nconst memoryStyle = {\n    width: '100%',\n    height: '100%',\n\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(8em, 1fr))',\n    gridAutoRows: '1fr',\n    gridGap: '.25rem',\n    padding: '.25rem',\n    justifyItems: 'center'\n}\n\nexport default Memory","import React, { useContext, useEffect } from 'react'\n\nimport './App.css'\nimport { CardInfoContext } from './Store'\nimport Memory from './components/memory/Memory'\n\nconst App = () => {\n  const [, setCardInfo] = useContext(CardInfoContext)\n\n  useEffect(() => fetchData(setCardInfo), [setCardInfo])\n  \n  return (\n    <>\n      <div className=\"app\">\n        <Memory />\n      </div>\n    </>\n)};\n\nfunction fetchData(setCardInfo){\n  //quick and dirty hack to get around CORS restrictions. Security issue because routing over third party!\n  fetch('https://cors-anywhere.herokuapp.com/www.comerge.net/team')\n    .then(response => response.text())\n    .then(htmlString => {\n      const dom = new DOMParser().parseFromString(htmlString, 'text/html')\n      const portraits = dom.querySelectorAll('.portrait')\n      const cardInfo = Array.from(portraits)\n        .map(portrait => ({\n          name: portrait.querySelector('.intro strong').innerText,\n          nickName: portrait.querySelector('.intro p')?.innerText,\n          position: portrait.querySelector('.role').innerText,\n          image: portrait.querySelector('.imageSlider img').src.replace(window.location.host,\"cors-anywhere.herokuapp.com/www.comerge.net\")\n        }))\n      return cardInfo\n    })\n    .then(cardInfo => { //fetch all images s.t. they get cached \n      cardInfo.forEach(info => {\n        const img = document.createElement('img')\n        img.crossOrigin = 'anonymous'\n        img.src = info.image\n        img.style.width = '1px'\n        document.body.appendChild(img)\n        setTimeout(() => document.body.removeChild(img),0)\n      })\n      return cardInfo\n    })\n    .then(cardInfo => cardInfo.map((info, index) => ({id: index, ...info, })))\n    .then(cardInfo => setCardInfo(cardInfo))\n}\n\nexport default App;\n","import React from 'react'\n\nconst About = () => (\n    <>\n        <div style={containerStyle}>\n            <h1>About</h1>\n            <p>This is a simple memory game meant as an exercise to get familiar with JavaScript, React and PWAs.</p>\n            <p>It will crawl <a href=\"https://www.comerge.net/team\">the Comerge Team Page</a> for updates when it's online\n            and use the profiles there to populate the cards with.</p>\n        </div>\n    </>\n);\n\nconst containerStyle = {\n    padding: '1em'\n}\n\nexport default About","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header = () => (\n    <header style={headerStyle}>\n        <h1>CMRG Memory</h1>\n        <div><Link to=\"/\" style={headerLinkStyle}>Home</Link> | <Link to=\"/about\" style={headerLinkStyle}>About</Link></div>\n    </header>\n)\n\nconst headerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n\n    alignItems: 'center',\n\n    padding: '.25em',\n\n    background: '#333',\n    color: 'white'\n}\n\nconst headerLinkStyle = {\n    color: 'white'\n}\n\nexport default Header","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport { Helmet } from 'react-helmet';\n\nimport App from './App';\nimport Store from './Store'\nimport About from './components/pages/About'\nimport Header from './components/layout/Header';\n\nReactDOM.render(\n  <>\n    <Helmet>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    </Helmet>\n    <React.StrictMode>\n      <Store>\n        <Router basename = {process.env.PUBLIC_URL}>\n          <Route path = \"/\" component={Header}/>\n          <Route exact path=\"/\" component= {App} />\n          <Route path=\"/about\" component = {About} />\n        </Router>\n      </Store>\n    </React.StrictMode>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}